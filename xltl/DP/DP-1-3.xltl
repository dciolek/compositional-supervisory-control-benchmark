<project>
  <signals>
    <signal>
      <name>Philosopher_0_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <notes></notes>
    </signal>
    <signal>
      <name>Philosopher_0_1</name>
      <kind>E</kind>
      <type>boolean</type>
      <notes></notes>
    </signal>
    <signal>
      <name>Philosopher_0_2</name>
      <kind>E</kind>
      <type>boolean</type>
      <notes></notes>
    </signal>
    <signal>
      <name>Philosopher_0_3</name>
      <kind>E</kind>
      <type>boolean</type>
      <notes></notes>
    </signal>
    <signal>
      <name>Fork_0_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <notes></notes>
    </signal>
    <signal>
      <name>Fork_0_1</name>
      <kind>E</kind>
      <type>boolean</type>
      <notes></notes>
    </signal>
    <signal>
      <name>_U_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <notes></notes>
    </signal>
    <signal>
      <name>_U_1</name>
      <kind>E</kind>
      <type>boolean</type>
      <notes></notes>
    </signal>
    <signal>
      <name>_U_2</name>
      <kind>E</kind>
      <type>boolean</type>
      <notes></notes>
    </signal>
    <signal>
      <name>_C_0</name>
      <kind>S</kind>
      <type>boolean</type>
      <notes></notes>
    </signal>
  </signals>
  <requirements>
    <requirement>
      <name>_CN_constraint</name>
      <kind>G</kind>
      <property>
        G(
          (!_C_0)&lt;-&gt;!(!_U_0&amp;&amp;!_U_1&amp;&amp;!_U_2)
        )
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>_UN_constraint</name>
      <kind>A</kind>
      <property>
        G(
          (!_U_0&amp;&amp;!_U_1&amp;&amp;!_U_2)&lt;-&gt;(!(
            (((!Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)))||
            (((!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)))||
            (((!Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)||(Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)||(!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)))||
            (((Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)||(!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;Philosopher_0_3))&amp;&amp;((!Fork_0_0&amp;&amp;!Fork_0_1)||(Fork_0_0&amp;&amp;!Fork_0_1)))||
            (((Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;Philosopher_0_3)))
          ))
        )
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>extra_constraint</name>
      <kind>A</kind>
      <property>
        G(!(
          (!_U_0&amp;&amp;_U_1&amp;&amp;_U_2)||
          (_U_0&amp;&amp;_U_1&amp;&amp;_U_2)
        ))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Goal</name>
      <kind>G</kind>
      <property>
        G(F(
          (
            (((Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;Philosopher_0_3)))
          )
        ))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>fairness</name>
      <kind>A</kind>
      <property>
        G(F(TRUE))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_initial_constraint</name>
      <kind>A</kind>
      <property>
        (!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_eat_0_constraint</name>
      <kind>A</kind>
      <property>
        G((_U_0&amp;&amp;!_U_1&amp;&amp;!_U_2)-&gt;((!Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_think_0_constraint</name>
      <kind>A</kind>
      <property>
        G((!_U_0&amp;&amp;_U_1&amp;&amp;!_U_2)-&gt;((!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_step_0_constraint</name>
      <kind>A</kind>
      <property>
        G((_U_0&amp;&amp;_U_1&amp;&amp;!_U_2)-&gt;((!Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)||(Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)||(!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_take_0_0_constraint</name>
      <kind>G</kind>
      <property>
        G((_C_0)-&gt;((Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)||(Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_release_0_0_constraint</name>
      <kind>A</kind>
      <property>
        G((!_U_0&amp;&amp;!_U_1&amp;&amp;_U_2)-&gt;((Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)||(!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;Philosopher_0_3)))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_end_constraint</name>
      <kind>A</kind>
      <property>
        G((_U_0&amp;&amp;!_U_1&amp;&amp;_U_2)-&gt;((Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;Philosopher_0_3)))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_eat_0_transition</name>
      <kind>A</kind>
      <property>
        G(((_U_0&amp;&amp;!_U_1&amp;&amp;!_U_2))-&gt;(((!Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)-&gt;X((Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_think_0_transition</name>
      <kind>A</kind>
      <property>
        G(((!_U_0&amp;&amp;_U_1&amp;&amp;!_U_2))-&gt;(((!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)-&gt;X((Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_step_0_transition</name>
      <kind>A</kind>
      <property>
        G(((_U_0&amp;&amp;_U_1&amp;&amp;!_U_2))-&gt;(((!Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)-&gt;X((Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)))&amp;&amp;((Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)-&gt;X((!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)))&amp;&amp;((!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)-&gt;X((Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_take_0_0_transition</name>
      <kind>A</kind>
      <property>
        G(((_C_0))-&gt;(((Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)-&gt;X((!Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)))&amp;&amp;((Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)-&gt;X((!Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_release_0_0_transition</name>
      <kind>A</kind>
      <property>
        G(((!_U_0&amp;&amp;!_U_1&amp;&amp;_U_2))-&gt;(((Philosopher_0_0&amp;&amp;Philosopher_0_1&amp;&amp;Philosopher_0_2&amp;&amp;!Philosopher_0_3)-&gt;X((!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;Philosopher_0_3)))&amp;&amp;((!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;Philosopher_0_3)-&gt;X((Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;Philosopher_0_3)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Philosopher_0_end_transition</name>
      <kind>A</kind>
      <property>
        G(((_U_0&amp;&amp;!_U_1&amp;&amp;_U_2))-&gt;(((Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;Philosopher_0_3)-&gt;X((!Philosopher_0_0&amp;&amp;!Philosopher_0_1&amp;&amp;!Philosopher_0_2&amp;&amp;!Philosopher_0_3)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Fork_0_initial_constraint</name>
      <kind>A</kind>
      <property>
        (!Fork_0_0&amp;&amp;!Fork_0_1)
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Fork_0_take_0_0_constraint</name>
      <kind>G</kind>
      <property>
        G((_C_0)-&gt;((!Fork_0_0&amp;&amp;!Fork_0_1)||(Fork_0_0&amp;&amp;!Fork_0_1)))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Fork_0_release_0_0_constraint</name>
      <kind>A</kind>
      <property>
        G((!_U_0&amp;&amp;!_U_1&amp;&amp;_U_2)-&gt;((!Fork_0_0&amp;&amp;!Fork_0_1)||(Fork_0_0&amp;&amp;!Fork_0_1)))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Fork_0_eat_0_transition</name>
      <kind>A</kind>
      <property>
        G(((_U_0&amp;&amp;!_U_1&amp;&amp;!_U_2))-&gt;((((Fork_0_0)&lt;-&gt;X(Fork_0_0))&amp;&amp;((Fork_0_1)&lt;-&gt;X(Fork_0_1)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Fork_0_think_0_transition</name>
      <kind>A</kind>
      <property>
        G(((!_U_0&amp;&amp;_U_1&amp;&amp;!_U_2))-&gt;((((Fork_0_0)&lt;-&gt;X(Fork_0_0))&amp;&amp;((Fork_0_1)&lt;-&gt;X(Fork_0_1)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Fork_0_step_0_transition</name>
      <kind>A</kind>
      <property>
        G(((_U_0&amp;&amp;_U_1&amp;&amp;!_U_2))-&gt;((((Fork_0_0)&lt;-&gt;X(Fork_0_0))&amp;&amp;((Fork_0_1)&lt;-&gt;X(Fork_0_1)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Fork_0_take_0_0_transition</name>
      <kind>A</kind>
      <property>
        G(((_C_0))-&gt;(((!Fork_0_0&amp;&amp;!Fork_0_1)-&gt;X((Fork_0_0&amp;&amp;!Fork_0_1)))&amp;&amp;((Fork_0_0&amp;&amp;!Fork_0_1)-&gt;X((Fork_0_0&amp;&amp;Fork_0_1)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Fork_0_release_0_0_transition</name>
      <kind>A</kind>
      <property>
        G(((!_U_0&amp;&amp;!_U_1&amp;&amp;_U_2))-&gt;(((!Fork_0_0&amp;&amp;!Fork_0_1)-&gt;X((!Fork_0_0&amp;&amp;!Fork_0_1)))&amp;&amp;((Fork_0_0&amp;&amp;!Fork_0_1)-&gt;X((!Fork_0_0&amp;&amp;!Fork_0_1)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
    <requirement>
      <name>Fork_0_end_transition</name>
      <kind>A</kind>
      <property>
        G(((_U_0&amp;&amp;!_U_1&amp;&amp;_U_2))-&gt;((((Fork_0_0)&lt;-&gt;X(Fork_0_0))&amp;&amp;((Fork_0_1)&lt;-&gt;X(Fork_0_1)))))
      </property>
      <toggled>1</toggled>
      <notes></notes>
    </requirement>
  </requirements>
</project>
